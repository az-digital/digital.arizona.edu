name: Create Release
on:
  repository_dispatch:
    types: az_bootstrap_release

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ssh-key: ${{ secrets.SELF_DEPLOY_KEY }}

      - name: Build variables
        run: |
          stem='arizona-bootstrap'
          echo "AZ_REVIEW_BASEURL=/${stem}" >> ${GITHUB_ENV}
          echo "AZ_REVIEW_STEM=${stem}" >> ${GITHUB_ENV}
          echo "AZ_SITE_HOST=https://digital.arizona.edu" >> ${GITHUB_ENV}
          echo "AZ_BOOTSTRAP_CLONE_DIR=arizona-bootstrap" >> ${GITHUB_ENV}

      - name: Get new updates from arizona-bootstrap
        uses: actions/checkout@v2
        with:
          repository: az-digital/arizona-bootstrap
          path: ${{ env.AZ_BOOTSTRAP_CLONE_DIR }}
          ref: ${{ github.event.client_payload.sha }}

      - name: Set variables for Docker images
        run: |
          cd "${AZ_BOOTSTRAP_CLONE_DIR}"
          lockhash=${{ hashFiles('Dockerfile', 'package-lock.json', 'scripts/*') }}
          registry='docker.pkg.github.com'
          imageprefix="${registry}/az-digital/arizona-bootstrap/"
          imagename='az-nodejs-ephemeral'
          echo "AZ_DOCKER_REGISTRY=${registry}" >> ${GITHUB_ENV}
          echo "AZ_EPHEMERAL_IMAGE=${imageprefix}${imagename}:${lockhash}" >> ${GITHUB_ENV}
          echo "AZ_BOOTSTRAP_SOURCE_DIR=arizona-bootstrap-src" >> ${GITHUB_ENV}

      - name: Docker authentication
        run: |
          docker login "$AZ_DOCKER_REGISTRY" -u "$GITHUB_ACTOR" -p ${{ secrets.GITHUB_TOKEN }}

      - name: Search for Docker image
        id: dockerpull
        continue-on-error: true
        run: |
          docker pull "$AZ_EPHEMERAL_IMAGE"

      - name: Conditionally rebuild the Docker image
        if: ${{ steps.dockerpull.outcome == 'failure' }}
        run: |
          cd "${AZ_BOOTSTRAP_CLONE_DIR}"
          docker build -t "$AZ_EPHEMERAL_IMAGE" .

      - name: Build and deploy documentation site artifact
        run: |
          (
            cd "${AZ_BOOTSTRAP_CLONE_DIR}"
            docker run --rm -e "AZ_SITE_BASE_URL=${AZ_REVIEW_BASEURL}" -e "AZ_SITE_HOST=${AZ_SITE_HOST}" -v $(pwd):"/${AZ_BOOTSTRAP_SOURCE_DIR}" "$AZ_EPHEMERAL_IMAGE" expose-review-site
          )
          rsync --recursive --delete "${AZ_BOOTSTRAP_CLONE_DIR}/_site/" "docs${AZ_REVIEW_BASEURL}"
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git config --global user.name "${GITHUB_ACTOR}"
          git add docs
          git commit -m "Arizona Bootstrap updates for ${{ github.event.client_payload.version }}"
          git push
